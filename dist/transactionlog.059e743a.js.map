{"mappings":"ACAA,cAyCA,AAvCA,iBACE,GAAI,CACF,IAAM,EAAW,MAAM,MACrB,8EAGF,GAAI,CAAC,EAAS,GACZ,MAAM,AAAI,MAAM,wBAGlB,IAAM,EAAO,MAAM,EAAS,OACtB,EAAa,OAAO,OAAO,GAEhB,EACd,IAAI,AAAC,GACG,EAAG,aAEX,OAAO,CAAC,EAAa,IAAiB,EAAc,GAEvD,EAAW,QAAQ,SAAU,CAAG,CAAE,CAAC,EACjC,IAAM,EAAO,CAAC;;WAET,EAAE,EAAI,KAAK;WACX,EAAE,EAAI,UAAU;0BACD,EAAE,EAAI,YAAY;;;YAGhC,CAAC,CACP,SACG,cAAc,uBACd,mBAAmB,aAAc,EACtC,EAGF,CAAE,MAAO,EAAO,CACd,QAAQ,MAAM,SAAU,EAC1B,CACF","sources":["<anon>","jsCode/transactionDetail.js"],"sourcesContent":["var $b45b541d9eb8dafb$exports = {};\n\"use strict\";\nasync function $b45b541d9eb8dafb$var$fetchData() {\n    try {\n        const response = await fetch(\"https://react-http-f3ac8-default-rtdb.firebaseio.com/mikitranssaction.json\");\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        const data = await response.json();\n        const tensaction = Object.values(data);\n        const alltrans = tensaction.map((el)=>{\n            return el.transAmount;\n        }).reduce((accumulator, currentValue)=>accumulator + currentValue);\n        tensaction.forEach(function(mov, i) {\n            const html = `\r\n        <div class=\"loan-item1\">\r\n        <p>${mov.date}</p>\r\n        <p>${mov.transName}</p>\r\n        <p class=\"red\">- $${mov.transAmount}</p>\r\n        <p class=\"none\">Debit</p>\r\n        <p class=\"none\">#53BV899GFT</p>\r\n      </div>`;\n            document.querySelector(\".loan-history-items\").insertAdjacentHTML(\"afterbegin\", html);\n        });\n    // Further processing or handling of the retrieved data can be done here\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n}\n$b45b541d9eb8dafb$var$fetchData();\n\n\n//# sourceMappingURL=transactionlog.059e743a.js.map\n","\"use strict\";\r\n\r\nasync function fetchData() {\r\n  try {\r\n    const response = await fetch(\r\n      \"https://react-http-f3ac8-default-rtdb.firebaseio.com/mikitranssaction.json\"\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch data\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    const tensaction = Object.values(data);\r\n\r\n    const alltrans = tensaction\r\n      .map((el) => {\r\n        return el.transAmount;\r\n      })\r\n      .reduce((accumulator, currentValue) => accumulator + currentValue);\r\n\r\n    tensaction.forEach(function (mov, i) {\r\n      const html = `\r\n        <div class=\"loan-item1\">\r\n        <p>${mov.date}</p>\r\n        <p>${mov.transName}</p>\r\n        <p class=\"red\">- $${mov.transAmount}</p>\r\n        <p class=\"none\">Debit</p>\r\n        <p class=\"none\">#53BV899GFT</p>\r\n      </div>`;\r\n      document\r\n        .querySelector(\".loan-history-items\")\r\n        .insertAdjacentHTML(\"afterbegin\", html);\r\n    });\r\n\r\n    // Further processing or handling of the retrieved data can be done here\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n  }\r\n}\r\n\r\nfetchData();\r\n"],"names":["$b45b541d9eb8dafb$var$fetchData","response","fetch","ok","Error","data","json","tensaction","Object","values","map","el","transAmount","reduce","accumulator","currentValue","forEach","mov","i","html","date","transName","document","querySelector","insertAdjacentHTML","error","console"],"version":3,"file":"transactionlog.059e743a.js.map"}